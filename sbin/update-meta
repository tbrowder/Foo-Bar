#!/usr/bin/env raku

use JSON::Fast;
use File::Find;

my $debug = 0;

my $dir = $*CWD; #.IO.parent;
say "\$dir: $dir" if $debug;


my $mfil = "$dir/META6.json";
my $rdir = "$dir/resources";
my %meta = from-json $mfil.IO.slurp;

my @paths = find :dir($rdir), :type<file>; #.IO.lines;

say "\@paths: ({@paths.elems})" if $debug;
if $debug {
    say "  '$_'" for @paths;
}


for @paths.kv -> $i, $v {
    
    say "path: $v" if $debug;

    my @pieces = $v.Str.split('/');
    my $pn = @pieces.elems;

    # path of interest is after first 7 pieces
    say "path pieces: ($pn)" if $debug;
    my $paridx;
    for @pieces.kv -> $i, $v {
        say "  piece $i: $v" if $debug;
        if $v eq "resources" {
            $paridx = $i;
        }
    }
    $paridx = 0 if not $paridx.defined;
    my $parent = @pieces[0..$paridx].join('/');
    my $path   = @pieces[$paridx+1..*].join('/');
    say "parent: '$parent'" if $debug;
    say "  path:   '$path'" if $debug;
    %meta<resources>.push: $path;
}

say "\%META" if $debug;
for %meta<resources>.values {
    say "meta/resources child: $_" if $debug;
}

#say %meta<resources>.gist;

